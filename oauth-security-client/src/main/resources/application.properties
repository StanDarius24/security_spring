server.port=8083

#DATABASE
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/tutorial
spring.datasource.username=postgres
spring.datasource.password=test

secret.key=stannis

#REGISTRATION OAUTH2
spring.security.oauth2.client.registration.api-client-oidc.client-id=api-client
spring.security.oauth2.client.registration.api-client-oidc.provider=spring
spring.security.oauth2.client.registration.api-client-oidc.client-secret=api-secret
spring.security.oauth2.client.registration.api-client-oidc.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.api-client-oidc.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.api-client-oidc.scope=openid
spring.security.oauth2.client.registration.api-client-oidc.client-name=api-client-oidc

spring.security.oauth2.client.registration.api-client-authorization-code.provider=spring
spring.security.oauth2.client.registration.api-client-authorization-code.client-id=api-client
spring.security.oauth2.client.registration.api-client-authorization-code.client-secret=api-secret
spring.security.oauth2.client.registration.api-client-authorization-code.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.api-client-authorization-code.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.api-client-authorization-code.scope= api.read
spring.security.oauth2.client.registration.api-client-authorization-code.client-name=api-client-authorization-code

