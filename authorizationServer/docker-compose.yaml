version: '2'

services:
  app1:
    restart: always
    image: 'authorizationserver'
    build:
      context: .
    container_name: app1
    ports:
      - "8080:8080"
    depends_on:
      - db1
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db1:5432/authorizationServer
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=test
      - SERVER_PORT=8080

  db1:
    image: 'postgres'
    restart: always
    container_name: db1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
    volumes:
      - ./database_data1:/var/lib/postgresql/data
      - ./database.sql:/docker-entrypoint-initdb.d/init.sql

  app2:
    restart: always
    image: 'authorizationserver'
    build:
      context: .
    container_name: app2
    ports:
      - "8081:8081"
    depends_on:
      - db2
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db2:5432/authorizationServer
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=test
      - SERVER_PORT=8081

  db2:
    image: 'postgres'
    restart: always
    container_name: db2
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
    volumes:
      - ./database_data2:/var/lib/postgresql/data
      - ./database.sql:/docker-entrypoint-initdb.d/init.sql
